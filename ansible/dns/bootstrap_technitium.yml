---
- name: Bootstrap Technitium DNS Server
  hosts: localhost
  gather_facts: false

  vars:
    technitium_api_host: "127.0.0.1"
    technitium_api_port: "5380"
    technitium_user: "admin"
    technitium_default_password: "admin"
    zone_to_create: "localdomain.local"
    technitium_a_record_hostname: "technitium-dns"
    technitium_a_record_ip: "127.0.0.1"

  vars_prompt:
    - name: technitium_admin_password
      prompt: "New Technitium Admin Password"
      unsafe: true
      private: true
      confirm: true

  # https://github.com/TechnitiumSoftware/DnsServer/blob/master/APIDOCS.md
  tasks:
  - name: Login with defaults for {{ technitium_user }} to get a token
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/user/login?user={{ technitium_user }}&pass={{ technitium_default_password }}&includeInfo=true"
    register: technitium_login_results

  - name: Validate Login
    ansible.builtin.assert:
      that: technitium_login_results.json.status == "ok"
      fail_msg: "Login with defaults failed:  {{ technitium_login_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "Login succeeded!"

  - name: "Change {{ technitium_user }}'s password"
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/user/changePassword?token={{ technitium_login_results.json.token }}&pass={{ technitium_admin_password }}"
    register: technitium_change_password_results

  - name: Validate Password Change
    ansible.builtin.assert:
      that: technitium_change_password_results.json.status == "ok"
      fail_msg: "Password change failed:  {{ technitium_change_password_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "Password Change succeeded!"

  - name: "Logout user {{ technitium_user }}"
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/user/logout?token={{ technitium_login_results.json.token }}"
    register: technitium_logout_results

  - name: Validate Logout for {{ technitium_user }}
    ansible.builtin.assert:
      that: technitium_logout_results.json.status == "ok"
      fail_msg: "Logout failed:  {{ technitium_logout_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "Logout succeeded!"

  - name: Login with new credentials for {{ technitium_user }}
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/user/login?user={{ technitium_user }}&pass={{ technitium_admin_password }}&includeInfo=true"
    register: technitium_relogin_results

  - name: Validate Login
    ansible.builtin.assert:
      that: technitium_relogin_results.json.status == "ok"
      fail_msg: "Login with defaults failed:  {{ technitium_relogin_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "Login succeeded!"

  - name: "Create Zone {{ zone_to_create }}"
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/zones/create?token={{ technitium_relogin_results.json.token }}&zone={{ zone_to_create }}&type=Primary"
    register: technitium_zone_creation_results

  - name: Output Zone Creation
    ansible.builtin.debug:
      var: technitium_zone_creation_results

  - name: Validate Zone Creation
    ansible.builtin.assert:
      that: technitium_zone_creation_results.json.status == "ok"
      fail_msg: "Zone Creation failed:  {{ technitium_zone_creation_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "Zone Creation succeeded!"

  - name: "Create 'A' Record '{{ technitium_a_record_hostname }}' -> '{{ technitium_a_record_ip }}' (with reverse record PTR and reverse zone for reverse record) in {{ zone_to_create }}"
    ansible.builtin.uri:
      url: "http://{{ technitium_api_host }}:{{ technitium_api_port }}/api/zones/records/add?token={{ technitium_relogin_results.json.token }}&zone={{ zone_to_create }}&domain={{ technitium_a_record_hostname }}.{{ zone_to_create}}&ipAddress={{ technitium_a_record_ip }}&type=A&comments=Homelab%20Technitium%20DNS%20Server&ptr=true&createPtrZone=true"
    register: technitium_a_record_creation_results

  - name: Output 'A' Record Creation
    ansible.builtin.debug:
      var: technitium_a_record_creation_results

  - name: Validate 'A' Record Creation
    ansible.builtin.assert:
      that: technitium_a_record_creation_results.json.status == "ok"
      fail_msg: "'A' Record Creation failed:  {{ technitium_a_record_creation_results.json.errorMessage | default ('NO_ERROR_MESSAGE_AVAILABLE') }}"
      success_msg: "'A' Record Creation succeeded!"
